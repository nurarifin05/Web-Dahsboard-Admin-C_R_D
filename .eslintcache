[{"D:\\React\\belajar\\admin-1\\src\\index.js":"1","D:\\React\\belajar\\admin-1\\src\\reportWebVitals.js":"2","D:\\React\\belajar\\admin-1\\src\\App.js":"3","D:\\React\\belajar\\admin-1\\src\\containers\\template\\Layout.js":"4","D:\\React\\belajar\\admin-1\\src\\config\\router.js":"5","D:\\React\\belajar\\admin-1\\src\\containers\\template\\loginPage.js":"6","D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu3.js":"7","D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu2.js":"8","D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu4.js":"9","D:\\React\\belajar\\admin-1\\src\\containers\\template\\DashboardTemplate.tsx":"10","D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu1\\menu1.js":"11","D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu1\\updateMenu1.js":"12","D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu1\\CreateMenu1.js":"13"},{"size":614,"mtime":1611202226644,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":524,"mtime":1611277408281,"results":"17","hashOfConfig":"15"},{"size":5282,"mtime":1611130595208,"results":"18","hashOfConfig":"15"},{"size":860,"mtime":1611130610156,"results":"19","hashOfConfig":"15"},{"size":3543,"mtime":1610888528481,"results":"20","hashOfConfig":"15"},{"size":167,"mtime":1610892845393,"results":"21","hashOfConfig":"15"},{"size":167,"mtime":1610892893126,"results":"22","hashOfConfig":"15"},{"size":167,"mtime":1610892883386,"results":"23","hashOfConfig":"15"},{"size":5430,"mtime":1611042540160,"results":"24","hashOfConfig":"15"},{"size":13551,"mtime":1611278186317,"results":"25","hashOfConfig":"15"},{"size":5956,"mtime":1611276893523,"results":"26","hashOfConfig":"15"},{"size":6223,"mtime":1611213568355,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"3sk8y8",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\React\\belajar\\admin-1\\src\\index.js",["63"],"import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport updateMenu1 from './components/Pages/menu1/updateMenu1';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["64","65"],"D:\\React\\belajar\\admin-1\\src\\reportWebVitals.js",[],"D:\\React\\belajar\\admin-1\\src\\App.js",["66","67"],"import React, {Component} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\nimport LoginPage from './containers/template/loginPage';\nimport DashboardTemplate from './containers/template/DashboardTemplate';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n      <Route exact path=\"/\" component={LoginPage} />\n      <Route  path=\"/dashboard\" component={DashboardTemplate} />\n        \n       \n      </Switch>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","D:\\React\\belajar\\admin-1\\src\\containers\\template\\Layout.js",["68"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { router } from '../../config/router';\r\nimport { NavLink, Route} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst renderRouter =() =>{\r\n    return router\r\n    .filter((route)=> route.template ===\"dashboard\")\r\n    .map((route) => {\r\n        return(\r\n        <Route component={route.component} path={'/' + route.template + route.path} />\r\n        );\r\n    });\r\n};\r\n\r\nexport default function LayoutTemplate() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Typography variant=\"h6\" noWrap>\r\n           dashboard\r\n          </Typography> */}\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {router.map((route, index) => (\r\n              <NavLink to={'/'+ route.template+ route.path} activeStyle={{\r\n                  backgroundColor:\"d8d8d8\",\r\n              }}>\r\n            <ListItem button key={route.label}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={route.label} />\r\n            </ListItem>\r\n            </NavLink>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        \r\n      </Drawer>\r\n        \r\n\r\n       <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {renderRouter()}\r\n        \r\n      </main>\r\n    </div> \r\n  );\r\n}\r\n",["69","70"],"D:\\React\\belajar\\admin-1\\src\\config\\router.js",["71"],"import Menu1 from \"../components/Pages/menu1/menu1\"\r\nimport updateMenu1 from \"../components/Pages/menu1/updateMenu1\"\r\nimport Menu2 from \"../components/Pages/menu2\"\r\nimport Menu3 from \"../components/Pages/menu3\"\r\nimport Menu4 from \"../components/Pages/menu4\"\r\n\r\n\r\n\r\nexport const router = [\r\n  {\r\n        icon: '',\r\n        label: 'menu1',\r\n        path: '/menu1',\r\n        template: 'dashboard',\r\n        component: Menu1,\r\n    },\r\n    {\r\n        icon: '',\r\n        label: 'menu2',\r\n        path: '/menu2',\r\n        template: 'dashboard',\r\n        component: Menu2,\r\n    },\r\n    {\r\n        icon: '',\r\n        label: 'menu3',\r\n        path: '/menu3',\r\n        template: 'dashboard',\r\n        component: Menu3,\r\n    },\r\n    {\r\n        icon: '',\r\n        label: 'menu4',\r\n        path: '/menu4',\r\n        template: 'dashboard',\r\n        component: Menu4,\r\n    }\r\n]","D:\\React\\belajar\\admin-1\\src\\containers\\template\\loginPage.js",[],"D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu3.js",[],"D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu2.js",[],"D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu4.js",[],"D:\\React\\belajar\\admin-1\\src\\containers\\template\\DashboardTemplate.tsx",["72"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { router } from '../../config/router';\r\nimport { NavLink, Route} from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nconst renderRouter = () => {\r\n    return router.filter((route) => route.template === 'dashboard')\r\n    .map((route) => {\r\n        return (\r\n        <Route component={route.component} path={'/' + route.template + route.path} />\r\n    );\r\n    });\r\n};\r\n\r\nexport default function DashboardTemplate() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Typography variant=\"h6\" noWrap>\r\n            RFID Dashboard\r\n          </Typography> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {router.map((route, index) => (\r\n\r\n            <ListItem button key={route.label} component={NavLink}\r\n            to={'/'+ route.template + route.path} \r\n            activeStyle={{\r\n                backgroundColor:\"#d8d8d8\",\r\n        }}>\r\n              <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={route.label} />\r\n            </ListItem>\r\n          \r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {renderRouter()}\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n",["73","74"],"D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu1\\menu1.js",["75"],"import React, { Component } from \"react\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport axios from \"axios\"\r\nimport CreateMenu1 from './CreateMenu1';\r\nimport updateMenu1 from \"./updateMenu1\";\r\n\r\n\r\nexport default class Menu1 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            students: [],\r\n            newTrData: {\r\n                Device_ID: \"\",\r\n                id_Account: \"\",\r\n                id_location: \"\",\r\n                item_id: \"\",\r\n                UoM: \"\",\r\n                Quantity: \"\",\r\n                Line_number: \"\",\r\n                Rack_number: \"\",\r\n                Bin_number: \"\",\r\n                Time_Enter: \"\",\r\n                status: \"\",\r\n            },\r\n            isLoading: false,\r\n            status: \"\",\r\n            newTrModal: false,\r\n            editTrData: {\r\n                Device_ID: \"\",\r\n                id_Account: \"\",\r\n                id_location: \"\",\r\n                item_id: \"\",\r\n                UoM: \"\",\r\n                Quantity: \"\",\r\n                Line_number: \"\",\r\n                Rack_number: \"\",\r\n                Bin_number: \"\",\r\n                Time_Enter: \"\",\r\n                status: \"\",\r\n            },\r\n            editTrModal: false,\r\n            noDataFound: \"\",\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getStudents();\r\n    }\r\n    getStudents(){\r\n        axios.get(\"http://192.168.0.105:5000/api/v1/tr\")\r\n        .then((response) => {\r\n            if (response.status === 200){\r\n                this.setState({\r\n                    students:response.data ? response.data : [],\r\n                });\r\n                console.log(\"data\", response)\r\n            }\r\n            if (\r\n                response.data.status === \"failed\" &&\r\n                response.data.success == false\r\n            ){\r\n                this.setState({\r\n                    noDataFound: response.data.message,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleNewTrModal = () => {\r\n        this.setState({\r\n            newTrModal: !this.state.newTrModal,\r\n        });\r\n    };\r\n    onChangeCreateTrHandler = (e) => {\r\n        let {newTrData} = this.state;\r\n        newTrData[e.target.name] = e.target.value;\r\n        this.setState({newTrData});\r\n    };\r\n    createTr = () => {\r\n        axios.post(\"http://192.168.0.105:5000/api/v1/tr\",\r\n        this.state.newTrData\r\n        ).then((response) => {\r\n            const {students} = this.state;\r\n            const newStudents = [...students];\r\n            newStudents.push(response.data);\r\n            this.setState(\r\n                {\r\n                students: newStudents,\r\n                newTrModal: false,\r\n                newTrData: {\r\n                        Device_ID: \"\",\r\n                        id_Account: \"\",\r\n                        id_location: \"\",\r\n                        item_id: \"\",\r\n                        UoM: \"\",\r\n                        Quantity: \"\",\r\n                        Line_number: \"\",\r\n                        Rack_number: \"\",\r\n                        Bin_number: \"\",\r\n                        Time_Enter: \"\",\r\n                        status: \"\",\r\n                    },\r\n                },\r\n                () => this.getStudents()\r\n            );\r\n        });\r\n\r\n    };\r\n\r\n    toggleEditTrModal = () => {\r\n        this.setState({\r\n            editTrModal: !this.state.editTrData,\r\n        });\r\n    };\r\n\r\n    onChangeEditTrHandler = (e) => {\r\n        let {editTrData} = this.state;\r\n        editTrData[e.target.name] = e.target.value;\r\n        this.setState({editTrData});\r\n    };\r\n\r\n    editTr = (id, Device_ID, id_Account, id_location, item_id, UoM, Quantity, Line_number, Rack_number, Bin_number, Time_Enter, status) => {\r\n        this.setState({\r\n            editTrData: {id, Device_ID, id_Account, id_location, item_id, UoM, Quantity, Line_number, Rack_number, Bin_number, Time_Enter, status},\r\n            editTrModal: !this.state.editTrModal,\r\n        });\r\n    };\r\n\r\n    updateTr = () => {\r\n        let{\r\n            id, \r\n            Device_ID, \r\n            id_Account, \r\n            id_location, \r\n            item_id, \r\n            UoM, \r\n            Quantity, \r\n            Line_number, \r\n            Rack_number, \r\n            Bin_number, \r\n            Time_Enter, \r\n            status,\r\n        } = this.state.editTrData;\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n        axios.post(\"http://192.168.0.105:5000/api/v1/tr\", {\r\n            id, \r\n            Device_ID, \r\n            id_Account, \r\n            id_location, \r\n            item_id, \r\n            UoM, \r\n            Quantity, \r\n            Line_number, \r\n            Rack_number, \r\n            Bin_number, \r\n            Time_Enter, \r\n            status,\r\n        })\r\n        .then((response) => {\r\n            this.getStudents();\r\n            this.setState({\r\n                editTrModal: false,\r\n                editTrData: {Device_ID, id_Account, id_location, item_id, UoM, Quantity, Line_number, Rack_number, Bin_number, Time_Enter, status},\r\n                isLoading: false,\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            this.setState({isLoading:false})\r\n            console.log(error.response);\r\n        });\r\n    };\r\n\r\n\r\n    deleteTr = (item_id) => {\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n        axios.delete(\"http://192.168.0.105:5000/api/v1/tr/\" + item_id)\r\n        .then((response) => {\r\n            this.setState({\r\n                isLoading: false,\r\n            });\r\n            this.getStudents();\r\n        })\r\n        .catch((error) => {\r\n            this.setState({\r\n                isLoading: false,\r\n            })\r\n        });\r\n    \r\n    };\r\n\r\n    render() {\r\n        const {newTrData, editTrData ,noDataFound, students} = this.state;\r\n        let studentsDetails = [];\r\n        if (students.length){\r\n            studentsDetails = students.map((student) => {\r\n                return(\r\n                    <tr key={student.id}>\r\n                        <td>{student.id}</td>\r\n                        <td>{student.Device_ID}</td>\r\n                        <td>{student.id_Account}</td>\r\n                        <td>{student.id_location}</td>\r\n                        <td>{student.item_id}</td>\r\n                        <td>{student.UoM}</td>\r\n                        <td>{student.Quantity}</td>\r\n                        <td>{student.Line_number}</td>\r\n                        <td>{student.Rack_number}</td>\r\n                        <td>{student.Bin_number}</td>\r\n                        <td>{student.Time_Enter}</td>\r\n                        <td>{student.status}</td>\r\n                        \r\n                        <td>\r\n                            <Button \r\n                                color=\"success\"\r\n                                className=\"mr-3\"\r\n                                size=\"sm\" \r\n                                onClick={() => \r\n                                this.editTr(\r\n                                    student.id,\r\n                                    student.Device_ID,\r\n                                    student.id_Account,\r\n                                    student.id_location,\r\n                                    student.item_id,\r\n                                    student.UoM,\r\n                                    student.Quantity,\r\n                                    student.Line_number,\r\n                                    student.Rack_number,\r\n                                    student.Bin_number,\r\n                                    student.Time_Enter,\r\n                                    student.status\r\n                                )\r\n                            } \r\n                        >\r\n                         Edit\r\n                        </Button>\r\n\r\n                            <Button \r\n                                color=\"danger\"\r\n                                size=\"sm\"\r\n                                onClick={() => this.deleteTr(student.item_id)}\r\n                            >\r\n                                 Delete\r\n                            </Button>\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            });\r\n        }\r\n\r\n        if (this.state.isLoading){\r\n            return <div className=\"spinner-border text-center\" role=\"status\"> <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"App container mt-4\">\r\n                <CreateMenu1 \r\n                    toggleNewTrModal={this.toggleNewTrModal}\r\n                    newTrModal={this.state.newTrModal}\r\n                    onChangeCreateTrHandler={this.onChangeCreateTrHandler}\r\n                    createTr={this.createTr}\r\n                    newTrData={newTrData}\r\n                />\r\n                <updateMenu1\r\n                toggleEditTrModal= {this.toggleEditTrModal}\r\n                editTrModal= {this.state.editTrModal}\r\n                onChangeEditTrHandler= {this.onChangeEditTrHandler}\r\n                editTr= {this.editTr}\r\n                editTrData= {editTrData}\r\n                updateTr={this.editTr}\r\n                />\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>Device_ID</th>\r\n                        <th>ID_Account</th>\r\n                        <th>id_location</th>\r\n                        <th>item_id</th>\r\n                        <th>UoM</th>\r\n                        <th>Quantity</th>\r\n                        <th>Line_number</th>\r\n                        <th>Rack_number</th>\r\n                        <th>Bin_number</th>\r\n                        <th>Time_Enter</th>\r\n                        <th>status</th>\r\n                        \r\n                        <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                       {students.length === 0 ? (\r\n                           <tbody>\r\n                               <h3>{noDataFound}</h3>\r\n                            </tbody>\r\n                       ):(\r\n                           <tbody>{studentsDetails}</tbody>\r\n                       )}\r\n                    \r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// import updateMenu1 from './updateMenu1'\r\n// import React, {useState, useEffect} from 'react'\r\n// import axios from 'axios'\r\n// import './style.css'\r\n// import {Link} from 'react-router-dom'\r\n// import { propTypes } from 'react-bootstrap/esm/Image'\r\n\r\n\r\n\r\n// const URL = 'http://192.168.0.105:5000/api/v1/tr'\r\n\r\n// const Menu1 = () => {\r\n\r\n//     //pengganti componentDidMount\r\n//     const [employees, setEmployees] = useState([])\r\n//     useEffect(() => {\r\n//         getData()\r\n//     }, [])\r\n// // axios get data\r\n//     const getData = async () => {\r\n//         const response = await axios.get(URL)\r\n//         setEmployees(response.data)\r\n//         console.log('ini output res', response)\r\n//     }\r\n// //axios delete data\r\n//     const removeData = (item_id, e) => {\r\n//         axios.delete(`${URL}/${item_id}`)\r\n//         .then(res => {\r\n//             const del = employees.filter(\r\n//                 employee => item_id !== employee.item_id)\r\n//                 setEmployees(del)\r\n//         })\r\n//     }\r\n\r\n//     const updateData = (item_id, e) => {\r\n//         console.log(item_id)\r\n        \r\n        \r\n\r\n//     }\r\n    \r\n   \r\n// //create header tabel\r\n//     const renderHeader = () => {\r\n//         let headerElement = ['id', 'Device_ID', 'id_Account','is_location', 'item_id', 'UoM', 'Quantity', 'Line_number', 'Rack_number', 'Bin_number', 'Time_Enter', 'status', 'Action']\r\n//         return headerElement.map((key, index) => {\r\n//             return <th key={index}>{key.toUpperCase()}</th>\r\n//         })\r\n//     }\r\n\r\n// //create body tabel\r\n//     const renderBody = () => {\r\n//         return employees && employees.map(({id,Device_ID,id_Account,id_location, item_id, UoM, Quantity, Line_number, Rack_number, Bin_number, Time_Enter, status}) => {\r\n//             return (\r\n//                 <tr key={id}>\r\n//                     <td>{id}</td>\r\n//                     <td>{Device_ID}</td>\r\n//                     <td>{id_Account}</td>\r\n//                     <td>{id_location}</td>\r\n//                     <td>{item_id}</td>\r\n//                     <td>{UoM}</td>\r\n//                     <td>{Quantity}</td>\r\n//                     <td>{Line_number}</td>\r\n//                     <td>{Rack_number}</td>\r\n//                     <td>{Bin_number}</td>\r\n//                     <td>{Time_Enter}</td>\r\n//                     <td>{status}</td>\r\n//                      <td className='opration'>\r\n//                     <button className='buttonDelete' onClick={(e) => removeData(item_id, e)}>Delete</button>\r\n                  \r\n//                     <button className='buttonEdit' onClick={(e) => updateData(item_id)}>Edit</button>\r\n                   \r\n//                     </td> \r\n                    \r\n//                 </tr>\r\n//             )\r\n//         })\r\n//     }\r\n//     return (\r\n//         <>\r\n//         <h1 id='title'></h1>\r\n//         <button className='buttonEdit'>Create</button>\r\n//         <table id='employee'>\r\n//             <thead>\r\n//                 <tr>{renderHeader()}</tr>\r\n//             </thead>\r\n//             <tbody>\r\n//                 {renderBody()}\r\n//             </tbody>\r\n//         </table>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Menu1\r\n\r\n\r\n","D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu1\\updateMenu1.js",[],"D:\\React\\belajar\\admin-1\\src\\components\\Pages\\menu1\\CreateMenu1.js",[],{"ruleId":"76","severity":1,"message":"77","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":19},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"76","severity":1,"message":"84","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"85","line":3,"column":49,"nodeType":"78","messageId":"79","endLine":3,"endColumn":53},{"ruleId":"76","severity":1,"message":"86","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":18},{"ruleId":"80","replacedBy":"87"},{"ruleId":"82","replacedBy":"88"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":19},{"ruleId":"89","severity":1,"message":"86","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":18},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"90","severity":1,"message":"91","line":60,"column":39,"nodeType":"92","messageId":"93","endLine":60,"endColumn":41},"no-unused-vars","'updateMenu1' is defined but never used.","Identifier","unusedVar","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'Component' is defined but never used.","'Link' is defined but never used.","'Typography' is defined but never used.",["94"],["95"],"@typescript-eslint/no-unused-vars","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]